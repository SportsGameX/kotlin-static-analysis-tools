build:
  maxIssues: 0
  excludeCorrectable: false
  weights:
  # complexity: 2
  # LongParameterList: 1
  # style: 1
  # comments: 1

config:
  validation: true
  warningsAsErrors: true
  checkExhaustiveness: false
  # when writing own rules with new properties, exclude the property path e.g.: 'my_rule_set,.*>.*>[my_property]'
  excludes: ''

processors:
  active: true
  exclude:
    - 'DetektProgressListener'
  # - 'KtFileCountProcessor'
  # - 'PackageCountProcessor'
  # - 'ClassCountProcessor'
  # - 'FunctionCountProcessor'
  # - 'PropertyCountProcessor'
  # - 'ProjectComplexityProcessor'
  # - 'ProjectCognitiveComplexityProcessor'
  # - 'ProjectLLOCProcessor'
  # - 'ProjectCLOCProcessor'
  # - 'ProjectLOCProcessor'
  # - 'ProjectSLOCProcessor'
  # - 'LicenseHeaderLoaderExtension'

console-reports:
  active: true
  exclude:
    - 'ProjectStatisticsReport'
    - 'ComplexityReport'
    - 'NotificationReport'
    - 'FindingsReport'
    - 'FileBasedFindingsReport'
  #  - 'LiteFindingsReport'

output-reports:
  active: true
  exclude:
    - 'XmlOutputReport'
    - 'MdOutputReport'
    - 'HtmlOutputReport'
  # - 'TxtOutputReport'

comments:
  active: true
  excludes: [ '**/build/**', "**/kotlin-static-analysis-tools/**" ]
  CommentOverPrivateFunction:
    active: true
  EndOfSentenceFormat:
    active: true

complexity:
  active: true
  excludes: [ '**/build/**', "**/kotlin-static-analysis-tools/**", "**/**.kts", "**/kmm-chart/**" ]
  CognitiveComplexMethod:
    active: true
    threshold: 15
  ComplexInterface:
    active: true
    threshold: 10
  LabeledExpression:
    active: true
  MethodOverloading:
    active: true
    threshold: 6
  NamedArguments:
    active: true
    threshold: 3
  NestedScopeFunctions:
    active: true
    threshold: 2
  StringLiteralDuplication:
    active: true
    threshold: 3

coroutines:
  active: true
  excludes: [ '**/build/**', "**/kotlin-static-analysis-tools/**" ]
  GlobalCoroutineUsage:
    active: true
  SuspendFunSwallowedCancellation:
    active: true
  SuspendFunWithCoroutineScopeReceiver:
    active: true

exceptions:
  active: true
  excludes: [ '**/build/**', "**/kotlin-static-analysis-tools/**" ]
  NotImplementedDeclaration:
    active: true
  ObjectExtendsThrowable:
    active: true
  ThrowingExceptionInMain:
    active: true

formatting:
  active: true
  excludes: [ '**/build/**', "**/kotlin-static-analysis-tools/**", "**/kmm-chart/**" ]
  ClassName:
    active: true
  ContextReceiverMapping:
    active: true
  DiscouragedCommentLocation:
    active: true
  EnumWrapping:
    active: true
  FunctionName:
    active: true
    ignoreAnnotated: &ignoreList [ 'Composable' ]
    excludes: [ '**/main.ios.kt' ]
  FunctionSignature:
    active: false
  IfElseBracing:
    active: true
  IfElseWrapping:
    active: true
    MultilineExpressionWrapping:
      active: true
  NoBlankLineInList:
    active: true
  NoConsecutiveComments:
    active: true
  NoEmptyFirstLineInClassBody:
    active: true
  NoSingleLineBlockComment:
    active: true
  ParameterListSpacing:
    active: true
  StringTemplateIndent:
    active: true
  TrailingCommaOnCallSite:
    active: true
  TrailingCommaOnDeclarationSite:
    active: true
  TryCatchFinallySpacing:
    active: true
  TypeArgumentListSpacing:
    active: true
  TypeParameterListSpacing:
    active: true

naming:
  active: true
  excludes: [ '**/build/**', "**/kotlin-static-analysis-tools/**" ]
  BooleanPropertyNaming:
    active: true
  FunctionMaxLength:
    active: true
    maximumFunctionNameLength: 35
  FunctionMinLength:
    active: true
    minimumFunctionNameLength: 2
  LambdaParameterNaming:
    active: true
  NonBooleanPropertyPrefixedWithIs:
    active: true
  VariableMaxLength:
    active: true
    maximumVariableNameLength: 64
  VariableMinLength:
    active: true
    minimumVariableNameLength: 1

performance:
  active: true
  excludes: [ '**/build/**', "**/kotlin-static-analysis-tools/**" ]
  CouldBeSequence:
    active: true
    threshold: 3
  UnnecessaryPartOfBinaryExpression:
    active: true

potential-bugs:
  active: true
  excludes: [ '**/build/**', "**/kotlin-static-analysis-tools/**" ]
  CastNullableToNonNullableType:
    active: true
  CastToNullableType:
    active: true
  DontDowncastCollectionTypes:
    active: true
  ElseCaseInsteadOfExhaustiveWhen:
    active: true
    ignoredSubjectTypes: [ ]
  ExitOutsideMain:
    active: true
  ImplicitUnitReturnType:
    active: true
  LateinitUsage:
    active: true
  MissingPackageDeclaration:
    active: true
    excludes: [ "**/**.kts" ]
  NullCheckOnMutableProperty:
    active: true
  NullableToStringCall:
    active: true
  PropertyUsedBeforeDeclaration:
    active: true
  UnconditionalJumpStatementInLoop:
    active: true
  UnnecessaryNotNullCheck:
    active: true

style:
  active: true
  excludes: [ '**/build/**', "**/kotlin-static-analysis-tools/**", "**/kmm-chart/**" ]
  AlsoCouldBeApply:
    active: true
  BracesOnIfStatements:
    active: true
    singleLine: necessary
    multiLine: always
  BracesOnWhenStatements:
    active: true
    singleLine: necessary
    multiLine: necessary
  CanBeNonNullable:
    active: true
  CascadingCallWrapping:
    active: true
  ClassOrdering:
    active: true
  CollapsibleIfStatements:
    active: true
  DataClassContainsFunctions:
    active: true
  DataClassShouldBeImmutable:
    active: true
  DoubleNegativeLambda:
    active: true
  EqualsOnSignatureLine:
    active: true
  ExplicitCollectionElementAccessMethod:
    active: true
  ExpressionBodySyntax:
    active: true
  ForbiddenAnnotation:
    active: true
  ForbiddenMethodCall:
    active: true
    methods: [ 'kotlin.io.print', 'kotlin.io.println' ]
  MandatoryBracesLoops:
    active: true
  MaxChainedCallsOnSameLine:
    active: true
  MultilineLambdaItParameter:
    active: true
  NoTabs:
    active: true
  NullableBooleanCheck:
    active: true
  PreferToOverPairSyntax:
    active: true
  RedundantExplicitType:
    active: true
  RedundantVisibilityModifierRule:
    active: true
  SpacingBetweenPackageAndImports:
    active: true
  StringShouldBeRawString:
    active: true
  TrailingWhitespace:
    active: true
  TrimMultilineRawString:
    active: true
  UnderscoresInNumericLiterals:
    active: true
  UnnecessaryAnnotationUseSiteTarget:
    active: true
  UnnecessaryBackticks:
    active: true
  UnnecessaryBracesAroundTrailingLambda:
    active: true
  UnnecessaryInnerClass:
    active: true
  UnnecessaryLet:
    active: true
  UnnecessaryParentheses:
    active: true
  UntilInsteadOfRangeTo:
    active: true
  UnusedImports:
    active: true
  UseDataClass:
    active: true
  UseEmptyCounterpart:
    active: true
  UseIfEmptyOrIfBlank:
    active: true
  UseIfInsteadOfWhen:
    active: true
  UseLet:
    active: true
  UseSumOfInsteadOfFlatMapSize:
    active: true

Compose:
  CompositionLocalAllowlist:
    active: true
    allowedCompositionLocals: LocalSafeArea, LocalDarkMode, LocalWindowPaddingSetting, LocalScaffoldOptions
  ContentEmitterReturningValues:
    active: true
    # You can optionally add your own composables here
    # contentEmitters: MyComposable,MyOtherComposable
  DefaultsVisibility:
    active: true
  ModifierComposable:
    active: true
  ModifierMissing:
    active: true
    # You can optionally control the visibility of which composables to check for here
    # Possible values are: `only_public`, `public_and_internal` and `all` (default is `only_public`)
    # checkModifiersForVisibility: only_public
  ModifierNaming:
    active: true
  ModifierNotUsedAtRoot:
    active: true
    # You can optionally add your own composables here
    # contentEmitters: MyComposable,MyOtherComposable
  ModifierReused:
    active: true
  ModifierWithoutDefault:
    active: true
  MultipleEmitters:
    active: true
    # You can optionally add your own composables here
    # contentEmitters: MyComposable,MyOtherComposable
  MutableParams:
    active: true
  ComposableNaming:
    active: true
    # You can optionally disable the checks in this rule for regex matches against the composable name (e.g. molecule presenters)
    # allowedComposableFunctionNames: .*Presenter,.*MoleculePresenter
  ComposableParamOrder:
    active: true
  PreviewAnnotationNaming:
    active: true
  PreviewPublic:
    active: true
  RememberMissing:
    active: true
  UnstableCollections:
    active: true
  ViewModelForwarding:
    active: true
    # You can optionally use this rule on things other than types ending in "ViewModel" or "Presenter" (which are the defaults). You can add your own via a regex here:
    # allowedStateHolderNames: .*ViewModel,.*Presenter
  ViewModelInjection:
    active: true
    # You can optionally add your own ViewModel factories here
    # viewModelFactories: hiltViewModel,potatoViewModel
